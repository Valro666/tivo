package rvb;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class Diminution {

	static int loop = 0;

	static int loop() {

		loop++;

		if (loop > 3) {
			loop = 1;
		}
		return loop;
	}

	public static void main(String[] a) {

		try {

			String tmp = "";
			File image = new File(a[0]);

			if (!image.exists()) {
				System.out.println("le fichier" + a[0] + " n existe pas");
				System.exit(0);
			}

			if (!image.getName().contains("ppm")) {
				System.out.println("le fichier n est pas un .ppm");
				System.exit(1);
			}

			String nom = image.getName().substring(0, image.getName().indexOf("."));

			// System.out.println(nom);

			FileReader fr = new FileReader(image);
			BufferedReader buff = new BufferedReader(fr);

			tmp = tmp + buff.readLine() + "\n" + buff.readLine() + "\n";

			String f = buff.readLine();

			tmp = f + "\n" + buff.readLine() + "\n";

			int ligne, colone;

			int bal = f.lastIndexOf(" ");

			ligne = Integer.valueOf(f.substring(0, bal));
			colone = Integer.valueOf(f.substring(bal + 1));

			System.out.println(ligne + " " + colone);

			String s;

			// System.out.println(tmp);

			File rouge = new File("rouge" + nom + ".ppm");
			rouge.createNewFile();
			// File bleu = new File("bleu" + nom + ".ppm");
			// bleu.createNewFile();
			// File vert = new File("vert" + nom + ".ppm");
			// vert.createNewFile();

			FileWriter fwr = new FileWriter(rouge);
			// FileWriter fwb = new FileWriter(bleu);
			// FileWriter fwv = new FileWriter(vert);

			fwr.write(tmp);
			// fwv.write(tmp);
			// fwb.write(tmp);

			// System.out.println(rouge.exists());
			// System.out.println(bleu.exists());
			// System.out.println(vert.exists());

			Pixel[][] tab = new Pixel[ligne][colone];

			Pixel pix = new Pixel();

			int li = 0, co = 0;

			while ((s = buff.readLine()) != null) {

				switch (loop()) {

				default:
				case 1:

					pix = new Pixel();
					pix.red = Integer.valueOf(s);
					// r = r + s + " 0 0 \n";
					// fwr.write(s + " 0 0 \n");
					break;
				case 2:
					pix.green = Integer.valueOf(s);
					// v = v + " 0 " + s + " 0 \n";
					// fwv.write(" 0 " + s + " 0 \n");
					break;
				case 3:
					pix.blue = Integer.valueOf(s);
					// fwb.write(" 0 0 " + s + "\n");
					// b = b + " 0 0 " + s + "\n";

					tab[li][co] = pix;
					co++;
					if (co >= colone) {
						co = 0;
						li++;
					}
					break;
				}

			}

			if (ligne % 2 != 0) {
				System.out.println("attention ligne");
			}

			if (colone % 2 != 0) {
				System.out.println("attention colone");
			}

			Pixel[][] fin = new Pixel[ligne / 2][colone / 2];

			for (int l = 0; l < ligne; l++) {
				for (int c = 0; c < colone; c++) {
					Pixel p = new Pixel();
				}
			}

			System.out.println(tab);

			fwr.close();
			// fwv.close();
			// fwb.close();
			buff.close();

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}
